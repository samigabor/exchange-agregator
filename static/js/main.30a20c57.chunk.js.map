{"version":3,"sources":["helpers/format-price.js","components/Coin/Coin.jsx","components/Coins/Coins.jsx","logo.svg","components/Header/Header.jsx","components/AccountBalance/AccountBalance.jsx","App.js","reportWebVitals.js","index.js"],"names":["formatPrice","price","decimals","currency","decimalPrice","Number","toFixed","Coin","props","name","ticker","showBalance","balance","onClick","refreshPrice","id","Coins","coins","map","Header","className","src","logo","alt","AccountBalance","handleShowBalance","amount","api","App","useState","setShowBalance","setCoins","getCoinById","coinId","fetch","then","response","json","updateCoinPrices","a","Promise","all","coin","prices","updatedCoins","index","price_usd","coinData","newCoin","componentDidMount","data","topCoins","splice","symbol","catch","err","console","log","useEffect","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30a20c57.chunk.js","sourcesContent":["export default function formatPrice(price, decimals = 2, currency = '$') {\r\n  const decimalPrice = Number(price).toFixed(decimals);\r\n  return `${currency}${decimalPrice}`;\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport formatPrice from '../../helpers/format-price';\r\n\r\nexport default function Coin(props) {\r\n  return (\r\n    <tr>\r\n      <td>{ props.name }</td>\r\n      <td>{ props.ticker }</td>\r\n      { props.showBalance ? <td>{ props.balance }</td> : null }\r\n      <td>{ formatPrice(props.price) }</td>\r\n      <td>\r\n      <button onClick={() => props.refreshPrice(props.id)}>\r\n        Refresh\r\n      </button>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nCoin.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  ticker: PropTypes.string,\r\n  balance: PropTypes.number,\r\n  price: PropTypes.number\r\n}\r\n","import React from 'react'\r\nimport Coin from '../Coin/Coin';\r\n\r\nexport default function Coins(props) {\r\n  return (\r\n    <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Ticker</th>\r\n            { props.showBalance ? <th>Balance</th> : null }\r\n            <th>Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          { props.coins.map(({id, name, ticker, balance, price}) =>\r\n            <Coin\r\n              id={id}\r\n              name={name}\r\n              ticker={ticker}\r\n              balance={balance}\r\n              price={price}\r\n              key={id}\r\n              showBalance={props.showBalance}\r\n              refreshPrice={props.refreshPrice}\r\n            />)\r\n          }\r\n        </tbody>\r\n      </table>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport logo from '../../logo.svg';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <h1>Coin Exchange</h1>\r\n      </header>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport './AccountBalance.css';\r\n\r\nexport default function AccountBalance(props) {\r\n  return (\r\n    <section className=\"account-balance\">\r\n      <button onClick={props.handleShowBalance}>\r\n        { props.showBalance ? 'Hide ' : 'Show' } Balance\r\n      </button>\r\n      <span className=\"balance-amount\">\r\n        { props.showBalance ? `$${props.amount}` : '' }\r\n      </span>\r\n    </section>\r\n  )\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n  amount: PropTypes.number.isRequired\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Coins from './components/Coins/Coins';\r\nimport Header from './components/Header/Header';\r\nimport AccountBalance from './components/AccountBalance/AccountBalance';\r\n\r\nconst api = 'https://api.coinpaprika.com/v1';\r\n\r\nfunction App() {\r\n  const [balance, setBalance] = useState(10000);\r\n  const [showBalance, setShowBalance] = useState(true);\r\n  const [coins, setCoins] = useState([]);\r\n\r\n  const toggleShowBalance = () => {\r\n    setShowBalance(!showBalance);\r\n  }\r\n\r\n  const getAllCoins = () => {\r\n    return fetch(`${api}/coins`).then(response => response.json());\r\n  }\r\n\r\n  const getCoinById = (coinId) => {\r\n    return fetch(`${api}/ticker/${coinId}`).then(response => response.json());\r\n  }\r\n\r\n  const updateCoinPrices = async (coins) => {\r\n    const prices = await Promise.all(coins.map(coin => getCoinById(coin.id)));\r\n    const updatedCoins = coins.map((coin, index) => ({\r\n      ...coin,\r\n      price: Number(prices[index].price_usd)\r\n    }));\r\n    setCoins(updatedCoins);\r\n  }\r\n  \r\n  const refreshPrice = async (coinId) => {\r\n    getCoinById(coinId).then(coinData => {\r\n      const updatedCoins = coins.map((coin) => {\r\n        const newCoin = { ...coin };\r\n        if (coin.id === coinId) {\r\n          newCoin.price = Number(coinData.price_usd);\r\n        }\r\n        return newCoin;\r\n      });\r\n      setCoins(updatedCoins);\r\n    });\r\n  }\r\n\r\n  const componentDidMount = async () => {\r\n    await getAllCoins().then(data => {\r\n      const topCoins = data.splice(0, 10).map(coin => ({\r\n        id: coin.id,\r\n        name: coin.name,\r\n        ticker: coin.symbol,\r\n        balance: 0,\r\n        price: 0\r\n      }));\r\n      setCoins(topCoins);\r\n      updateCoinPrices(topCoins);\r\n    })\r\n    .catch(err => console.log('Get all coins error:', err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (coins.length === 0) {\r\n      componentDidMount();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <AccountBalance\r\n        amount={balance}\r\n        showBalance={showBalance}\r\n        handleShowBalance={toggleShowBalance}\r\n      />\r\n      <Coins\r\n        coins={coins}\r\n        showBalance={showBalance}\r\n        refreshPrice={refreshPrice}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}